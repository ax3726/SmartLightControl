apply plugin: 'com.android.application'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.regenpod.smartlightcontrol"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    flavorDimensions("default")

    productFlavors{

        Regen_Panel{

        }
        esorop{

        }

    }
    sourceSets {
        Regen_Panel.res.srcDir('src/main/res')
        esorop.res.srcDir('src/esorop/res')

    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [ UMENG_CHANNEL_VALUE:name ]
    }
    signingConfigs {
        xxconfig {
            storeFile file("zhzm.jks")
            keyAlias "zhzm"
            keyPassword "111111"
            storePassword "111111"
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.xxconfig
            android.applicationVariants.all { variant ->

                variant.outputs.all { output ->
                    if (variant.buildType.name != "debug") {
                        variant.getPackageApplicationProvider().get().outputDirectory =
                                new File(project.rootDir.absolutePath +
                                        "/app/build/outputs/apk/${variant.buildType.name}")
                    }

                    variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
                        def fileName = "${name}_${releaseTime()}.apk"
                        apkData.outputFileName = fileName
                    }
                }
            }
        }
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.xxconfig
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation project(path: ':FastBleLib')
    implementation project(path: ':common')
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    api 'io.reactivex.rxjava2:rxjava:2.2.6'
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HH-mm-ss", TimeZone.getTimeZone("GMT+8"))
}